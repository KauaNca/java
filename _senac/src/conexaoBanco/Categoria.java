/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package conexaoBanco;

import static java.awt.Frame.MAXIMIZED_BOTH;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Kaua33500476
 */
public class Categoria extends javax.swing.JInternalFrame {

    DefaultTableModel tabela;

    private KeyListener keyListener;

    /**
     * Creates new form Categoria
     */
    public Categoria() throws SQLException, ClassNotFoundException {
        initComponents();
        lbNovoNome.setVisible(false);
        txAtualizar.setVisible(false);
        btAtualizar.setVisible(false);

        keyListener = new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent evt) {
                txCategoriaKeyPressed(evt);
            }
        };
        tabelaCategoria.addKeyListener(keyListener);

        try (Connection conexaoAtiva = Conexao.conexaoBanco()) {
            String comandoSQL = "SELECT * FROM categoria";
            PreparedStatement ps = conexaoAtiva.prepareStatement(comandoSQL);
            tabela = (DefaultTableModel) tabelaCategoria.getModel();
            tabela.setNumRows(0);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                Object dados[] = {
                    rs.getString("id_categoria"),
                    rs.getString("descricao")
                };
                tabela.addRow(dados);
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txCategoria = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaCategoria = new javax.swing.JTable();
        btAdicionar = new javax.swing.JButton();
        btAlterar = new javax.swing.JButton();
        txAtualizar = new javax.swing.JTextField();
        lbNovoNome = new javax.swing.JLabel();
        btAtualizar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Categoria");

        jLabel1.setText("Categoria");

        txCategoria.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txCategoriaKeyPressed(evt);
            }
        });

        tabelaCategoria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NÃºmero", "Categoria"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaCategoria.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaCategoriaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaCategoria);

        btAdicionar.setText("Adicionar");
        btAdicionar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btAdicionarMouseClicked(evt);
            }
        });

        btAlterar.setText("Editar");
        btAlterar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btAlterarMouseClicked(evt);
            }
        });

        lbNovoNome.setText("Novo nome:");

        btAtualizar.setText("Atualizar");
        btAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAtualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(lbNovoNome))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txAtualizar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btAdicionar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btAtualizar))
                .addGap(158, 158, 158))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 542, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btAdicionar)
                    .addComponent(btAlterar))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbNovoNome)
                    .addComponent(btAtualizar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txCategoriaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txCategoriaKeyPressed
        try (Connection conexaoAtiva = Conexao.conexaoBanco()) {
            String comandoSQL = "SELECT id_categoria,descricao FROM categoria WHERE descricao LIKE ? ORDER BY id_categoria;";
            PreparedStatement ps = conexaoAtiva.prepareStatement(comandoSQL);
            ps.setString(1, "%" + txCategoria.getText() + "%");
            ResultSet rs = ps.executeQuery();
            tabela = (DefaultTableModel) tabelaCategoria.getModel();
            tabela.setNumRows(0);
            if (rs.next()) {
                Object[] dados = {
                    rs.getString("id_categoria"),
                    rs.getString("descricao")
                };
                tabela.addRow(dados);
            }

        } catch (SQLException ex) {
            System.out.println("ERRO - FRAME CATEGORIA - BANCO DE DADOS");
        } catch (ClassNotFoundException ex) {
            System.out.println("ERRO - FRAME CATEGORIA - DRIVER");
        }
    }//GEN-LAST:event_txCategoriaKeyPressed

    private void btAdicionarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btAdicionarMouseClicked
        try (Connection conexaoAtiva = Conexao.conexaoBanco()) {
            String comandoSQL = "SELECT id_categoria,descricao FROM categoria WHERE descricao LIKE ? ORDER BY id_categoria;";
            PreparedStatement ps = conexaoAtiva.prepareStatement(comandoSQL);
            ps.setString(1, "%" + txCategoria.getText() + "%");
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                JOptionPane.showMessageDialog(null, "Categoria existente");
            } else {
                String SQL = "INSERT INTO categoria(descricao) VALUES (?);";
                PreparedStatement stmt = conexaoAtiva.prepareStatement(SQL);
                stmt.setString(1, txCategoria.getText());
                stmt.execute();
                stmt.close();
                System.out.println("INSERIDO NA TABELA CATEGORIA");
            }
            ps.close();
            rs.close();
            conexaoAtiva.close();
        } catch (SQLException ex) {
            Logger.getLogger(Categoria.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Categoria.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btAdicionarMouseClicked

    private void btAlterarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btAlterarMouseClicked
        lbNovoNome.setVisible(true);
        txAtualizar.setVisible(true);
        btAtualizar.setVisible(true);
        btAlterar.setVisible(false);
    }//GEN-LAST:event_btAlterarMouseClicked

    private void tabelaCategoriaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaCategoriaMouseClicked
        txAtualizar.setText(tabelaCategoria.getValueAt(tabelaCategoria.getSelectedRow(), 1).toString());
        // Desativa o listener de keyPressed
        tabelaCategoria.removeKeyListener(keyListener);

    }//GEN-LAST:event_tabelaCategoriaMouseClicked

    private void btAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAtualizarActionPerformed
        String mudanca = txAtualizar.getText();
        String id_categoria = tabela.getValueAt(tabelaCategoria.getSelectedRow(), 0).toString();

        try (Connection conexaoAtiva = Conexao.conexaoBanco()) {
            String comandoSQL = "UPDATE categoria SET descricao = ? WHERE id_categoria = ?;";
            try (PreparedStatement stmt = conexaoAtiva.prepareStatement(comandoSQL)) {
                stmt.setString(1, mudanca);
                stmt.setString(2, id_categoria);
                stmt.executeUpdate();
                JOptionPane.showMessageDialog(null, "Atualizado com sucesso!");
                stmt.close();

                String SQL = "SELECT * FROM categoria";
                PreparedStatement ps = conexaoAtiva.prepareStatement(SQL);
                tabela = (DefaultTableModel) tabelaCategoria.getModel();
                tabela.setNumRows(0);
                ResultSet rs = ps.executeQuery();
                while (rs.next()) {
                    Object dados[] = {
                        rs.getString("id_categoria"),
                        rs.getString("descricao")
                    };
                    tabela.addRow(dados);
                }
                rs.close();
                ps.close();

            }
            conexaoAtiva.close();

        } catch (SQLException ex) {
            System.err.println("ERRO - BANCO DE DADOS - ATUALIZAR: " + ex.getMessage());
        } catch (ClassNotFoundException ex) {
            System.err.println("ERRO - DRIVER - ATUALIZAR: " + ex.getMessage());
        } finally {
            // Reativa o listener de keyPressed
            tabelaCategoria.addKeyListener(keyListener);
        }

    }//GEN-LAST:event_btAtualizarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdicionar;
    private javax.swing.JButton btAlterar;
    private javax.swing.JButton btAtualizar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbNovoNome;
    private javax.swing.JTable tabelaCategoria;
    private javax.swing.JTextField txAtualizar;
    private javax.swing.JTextField txCategoria;
    // End of variables declaration//GEN-END:variables
}
