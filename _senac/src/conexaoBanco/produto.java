/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package conexaoBanco;

import java.sql.Connection;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Kaua33500476
 */
public class produto extends javax.swing.JFrame {

    String situacaoA;
    DefaultTableModel modeloTabela;
    String categoriaA;

    /**
     * Creates new form produto
     */
    public produto() {
        initComponents();
        modeloTabela = (DefaultTableModel) tabela.getModel();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        codigo = new javax.swing.JTextField();
        descricao = new javax.swing.JTextField();
        preco = new javax.swing.JTextField();
        quantidade = new javax.swing.JTextField();
        cadastrar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        situacao = new javax.swing.JComboBox<>();
        categoria = new javax.swing.JComboBox<>();
        btAtualizar = new javax.swing.JButton();
        preencher = new javax.swing.JButton();
        limpar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cadastrar.setText("CADASTRAR");
        cadastrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cadastrarMouseClicked(evt);
            }
        });

        jLabel1.setText("CÓDIGO");

        jLabel2.setText("PRODUTO");

        jLabel3.setText("PREÇO");

        jLabel4.setText("SITUACÃO");

        jLabel5.setText("QUANTIDADE");

        jLabel6.setText("CATEGORIA");

        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id_produto", "codigo", "descricao", "preco", "situacao", "id_categoria", "estoque"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabela.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabela);

        situacao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Disponível", "Bloqueado", "Indisponível" }));

        categoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Alimentos e Bebidas", "Vestuário e Acessórios", "Eletrônicos e Eletrodomésticos", "Saúde e Beleza", "Casa e Decoração", "Esportes e Lazer", "Automotivo", "Tecnologia e Informática", "Móveis", "Brinquedos e Jogos", " " }));

        btAtualizar.setText("ATUALIZAR");
        btAtualizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btAtualizarMouseClicked(evt);
            }
        });

        preencher.setText("PREENCHER");
        preencher.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                preencherMouseClicked(evt);
            }
        });

        limpar.setText("LIMPAR");
        limpar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                limparMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(situacao, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(codigo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                                .addComponent(preco, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                                .addComponent(quantidade, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE))
                            .addComponent(categoria, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(descricao, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(cadastrar)
                        .addGap(18, 18, 18)
                        .addComponent(btAtualizar)
                        .addGap(18, 18, 18)
                        .addComponent(preencher)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(limpar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(codigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(descricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(preco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(situacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(quantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(categoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cadastrar)
                            .addComponent(btAtualizar)
                            .addComponent(preencher)
                            .addComponent(limpar)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cadastrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cadastrarMouseClicked
        try {
            Connection conexaoAtiva = Conexao.conexaoBanco();
            String comandoSQL = "INSERT INTO produto(codigo,descricao,preco,situacao,id_categoria,quantidade_estoque) VALUES(?,?,?,?,(SELECT id_categoria FROM categoria WHERE descricao = ?),?);";
            PreparedStatement stmt = conexaoAtiva.prepareStatement(comandoSQL);
            stmt.setString(1, codigo.getText());
            stmt.setString(2, descricao.getText());
            stmt.setString(3, preco.getText());
            stmt.setString(4, String.valueOf(situacao.getSelectedItem()));
            stmt.setString(5, String.valueOf(categoria.getSelectedItem()));
            stmt.setInt(6, Integer.parseInt(quantidade.getText()));
            stmt.execute();
            stmt.close();

            System.out.println("Produto inserido");

            String sql = "SELECT * FROM produto";
            PreparedStatement stm = conexaoAtiva.prepareStatement(sql);

            modeloTabela.setNumRows(0);
            ResultSet rs = stm.executeQuery();
            while (rs.next()) {
                Object[] dados = {
                    rs.getInt("id_produto"),
                    rs.getString("codigo"),
                    rs.getString("descricao"),
                    rs.getInt("preco"),
                    rs.getString("situacao"),
                    rs.getInt("id_categoria"),
                    rs.getInt("quantidade_estoque")

                };

                modeloTabela.addRow(dados);
            }
            rs.close();
            stm.close();
            conexaoAtiva.close();
            codigo.setText(null);
            descricao.setText(null);
            preco.setText(null);

            categoria.setSelectedItem(null);
            quantidade.setText(null);

        } catch (SQLException ex) {
            Logger.getLogger(produto.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(produto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cadastrarMouseClicked

    private void btAtualizarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btAtualizarMouseClicked
        try (Connection conexao = Conexao.conexaoBanco()) {
            String SQL = "UPDATE produto SET codigo = ?,descricao = ?,preco = ?, situacao = ?,"
                    + "quantidade_estoque = ? WHERE id_produto = ?";
            PreparedStatement ps = conexao.prepareStatement(SQL);
            ps.setString(1,codigo.getText());
            ps.setString(2, descricao.getText());
            ps.setString(3, preco.getText());
            ps.setString(4,String.valueOf(situacao.getSelectedItem()));
            ps.setString(5,quantidade.getText());
            ps.setString(6,tabela.getValueAt(tabela.getSelectedRow(),0).toString());
            ps.executeUpdate();
            ps.close();
            conexao.close();
        } catch (SQLException ex) {
            Logger.getLogger(produto.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(produto.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btAtualizarMouseClicked

    private void tabelaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaMouseClicked
        try (Connection conexaoAtiva = Conexao.conexaoBanco()) {
            codigo.setText(tabela.getValueAt(tabela.getSelectedRow(), 1).toString());
            descricao.setText(tabela.getValueAt(tabela.getSelectedRow(), 2).toString());
            preco.setText(tabela.getValueAt(tabela.getSelectedRow(), 3).toString());
            situacaoA = (tabela.getValueAt(tabela.getSelectedRow(), 4).toString());
            if (situacaoA.equals("Disponível")) {
                situacao.setSelectedItem("Disponível");
            } else if (situacaoA.equals("Bloqueado")) {
                situacao.setSelectedItem("Bloqueado");
            } else if (situacaoA.equals("Inativo")) {
                situacao.setSelectedItem("Inativo");
            }
            quantidade.setText(tabela.getValueAt(tabela.getSelectedRow(), 6).toString());
            categoriaA = (tabela.getValueAt(tabela.getSelectedRow(), 5).toString());
            switch (categoriaA) {
                case "1":
                    categoria.setSelectedItem("Alimentos e Bebidas");
                    break;
                case "2":
                    categoria.setSelectedItem("Vesturário e Acessórios");
                    break;
                case "3":
                    categoria.setSelectedItem("Eletrônicos e Eletrodomésticos");
                    break;
                case "4":
                    categoria.setSelectedItem("Saúde e Beleza");
                    break;
                case "5":
                    categoria.setSelectedItem("Casa e Decoração");
                    break;
                case "6":
                    categoria.setSelectedItem("Esportes e Lazer");
                    break;
                case "7":
                    categoria.setSelectedItem("Automotivo");
                    break;
                case "8":
                    categoria.setSelectedItem("Tecnologia e Informática");
                    break;
                case "9":
                    categoria.setSelectedItem("Móveis");
                    break;
                case "10":
                    categoria.setSelectedItem("Brinquedos e Jogos");
                    break;
            }
            conexaoAtiva.close();

        } catch (SQLException ex) {
            System.out.println("ERRO NA CONEXÃO DA TABELA");
        } catch (ClassNotFoundException ex) {
            System.out.println("ERRO NO DRIVER DA TABELA");
        }
    }//GEN-LAST:event_tabelaMouseClicked

    private void preencherMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_preencherMouseClicked
        Connection conexao;
        try {
            conexao = Conexao.conexaoBanco();
            modeloTabela.setNumRows(0);
            String SQL = "SELECT * FROM produto";
            PreparedStatement ps = conexao.prepareStatement(SQL);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                Object[] dados = {
                    rs.getInt("id_produto"),
                    rs.getString("codigo"),
                    rs.getString("descricao"),
                    rs.getInt("preco"),
                    rs.getString("situacao"),
                    rs.getInt("id_categoria"),
                    rs.getInt("quantidade_estoque")

                };

                modeloTabela.addRow(dados);
            }
        } catch (SQLException ex) {
            Logger.getLogger(produto.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(produto.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_preencherMouseClicked

    private void limparMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_limparMouseClicked
    codigo.setText(null);
            descricao.setText(null);
            preco.setText(null);

            categoria.setSelectedItem(null);
            quantidade.setText(null);        
    }//GEN-LAST:event_limparMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(produto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(produto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(produto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(produto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new produto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAtualizar;
    private javax.swing.JButton cadastrar;
    private javax.swing.JComboBox<String> categoria;
    private javax.swing.JTextField codigo;
    private javax.swing.JTextField descricao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton limpar;
    private javax.swing.JTextField preco;
    private javax.swing.JButton preencher;
    private javax.swing.JTextField quantidade;
    private javax.swing.JComboBox<String> situacao;
    private javax.swing.JTable tabela;
    // End of variables declaration//GEN-END:variables
}
