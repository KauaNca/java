EXPLICAÇÃO DO CÓDIGO

MINHA DÚVIDA: POR QUE QUANDO PANEL FOI INSTANCIADO EU NÃO PRECISEI CHAMAR OS MÉTODOS DA CLASSE PANEL.
A RESPOSTA PARA ISSO É QUE NÃO É NECESSÁRIO POIS HÁ MÉTODOS QUE SÃO CHAMADOS AUTOMÁTICAMENTE
AO RODAR O ARQUIVO E A JVM FARÁ O TRABALHO DE PROCURAR ESSE MÉTODO. NO CASO, SÃO MÉTODOS
QUE INTERFERE NA FORMA DO FRAME.



Panel painel = new Panel(); -> instanciado, chama o construtor da classe, mas não
há, então nada é feito.

JScrollPane rolagem = new JScrollPane(painel); -> a rolagem é adicionado ao painel.
add(rolagem) -> o JPanel é adicionado ao Frame junto com Scroll

setVisible(true) -> Agora, é o trabalho da JVM.

Em Java, a Virtual Machine (JVM) e o sistema de gerenciamento de eventos do Swing 
são responsáveis por chamar automaticamente 
certos métodos em momentos apropriados. Vamos detalhar um pouco mais:

Chamada Automática de Métodos
Método paintComponent
Quando é chamado: Sempre que um componente precisa ser desenhado ou redesenhado (por exemplo, quando a janela é redimensionada, minimizada e restaurada, ou quando você chama repaint()).
Como é chamado: A JVM e o sistema de eventos do Swing invocam paintComponent automaticamente. Você não precisa (e geralmente não deve) chamar este método diretamente.

Método getPreferredSize
Quando é chamado: Quando o layout manager precisa saber o tamanho preferido do componente para organizar a interface.
Como é chamado: O layout manager do Swing (como BorderLayout, FlowLayout, etc.) invoca getPreferredSize para determinar 
o tamanho preferido do componente. Isso ajuda o layout manager a 
organizar os componentes na tela de forma adequada.



Papel da JVM e do Sistema de Eventos
A JVM e o sistema de eventos do Swing fazem um monte de trabalho nos bastidores 
para garantir que a interface gráfica seja exibida corretamente. Isso inclui:

Gerenciamento de Eventos: Captura e trata eventos como cliques de mouse, 
pressionamentos de teclas, redimensionamento de janelas, etc.

Redesenho de Componentes: Decide quando os componentes precisam ser 
redesenhados e chama os métodos apropriados (paintComponent, repaint, etc.).

Layout dos Componentes: Usa os layout managers para organizar os componentes 
com base nos tamanhos preferidos, mínimos e máximos.

Importância de Sobrescrever Métodos
Quando você sobrescreve métodos como paintComponent e getPreferredSize, 
você está dizendo ao Swing como quer que seu componente seja desenhado e qual o 
tamanho ideal dele. No entanto, você não precisa se preocupar em chamar 
esses métodos diretamente; a infraestrutura do Swing cuida disso para você.